[{"/mnt/c/Users/petya/dev/node-test/babules/src/index.js":"1","/mnt/c/Users/petya/dev/node-test/babules/src/App.js":"2","/mnt/c/Users/petya/dev/node-test/babules/src/reportWebVitals.js":"3","/mnt/c/Users/petya/dev/node-test/babules/src/pages/Activities.js":"4","/mnt/c/Users/petya/dev/node-test/babules/src/pages/Help.js":"5","/mnt/c/Users/petya/dev/node-test/babules/src/components/Navbar.js":"6","/mnt/c/Users/petya/dev/node-test/babules/src/components/AddCategoryForm.js":"7","/mnt/c/Users/petya/dev/node-test/babules/src/components/CategoriesList.js":"8","/mnt/c/Users/petya/dev/node-test/babules/src/api/categories.js":"9","/mnt/c/Users/petya/dev/node-test/babules/src/api/const.js":"10","/mnt/c/Users/petya/dev/node-test/babules/src/pages/AddCategory.js":"11","/mnt/c/Users/petya/dev/node-test/babules/src/components/CategoryForm.js":"12","/mnt/c/Users/petya/dev/node-test/babules/src/pages/Categories.js":"13","/mnt/c/Users/petya/dev/node-test/babules/src/pages/EditCategory.js":"14"},{"size":504,"mtime":1614202673238,"results":"15","hashOfConfig":"16"},{"size":855,"mtime":1614544260334,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607158447408,"results":"18","hashOfConfig":"16"},{"size":124,"mtime":1614247058786,"results":"19","hashOfConfig":"16"},{"size":151,"mtime":1611847224334,"results":"20","hashOfConfig":"16"},{"size":1003,"mtime":1612564095364,"results":"21","hashOfConfig":"16"},{"size":757,"mtime":1612284309713,"results":"22","hashOfConfig":"16"},{"size":1271,"mtime":1615824132847,"results":"23","hashOfConfig":"16"},{"size":299,"mtime":1610234678068,"results":"24","hashOfConfig":"16"},{"size":51,"mtime":1610233932111,"results":"25","hashOfConfig":"16"},{"size":189,"mtime":1614246867321,"results":"26","hashOfConfig":"16"},{"size":1574,"mtime":1615729247193,"results":"27","hashOfConfig":"16"},{"size":717,"mtime":1614544222959,"results":"28","hashOfConfig":"16"},{"size":1147,"mtime":1616953675426,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"8x1ufo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"/mnt/c/Users/petya/dev/node-test/babules/src/index.js",[],["67","68"],"/mnt/c/Users/petya/dev/node-test/babules/src/App.js",[],"/mnt/c/Users/petya/dev/node-test/babules/src/reportWebVitals.js",[],"/mnt/c/Users/petya/dev/node-test/babules/src/pages/Activities.js",[],"/mnt/c/Users/petya/dev/node-test/babules/src/pages/Help.js",[],"/mnt/c/Users/petya/dev/node-test/babules/src/components/Navbar.js",[],"/mnt/c/Users/petya/dev/node-test/babules/src/components/AddCategoryForm.js",[],["69","70"],"/mnt/c/Users/petya/dev/node-test/babules/src/components/CategoriesList.js",["71","72","73","74"],"import React, { useState, useEffect } from \"react\";\nimport {Table,Button,Form} from 'react-bootstrap'\nimport { NavLink } from \"react-router-dom\";\n\nfunction CategoriesList({categories,description,onRemove}) {\n  function onEdit(id){\n    \n  }\n  \n  return !categories,description?.length ? (\n    <p>No categories</p>\n  ) : (\n    <>\n    <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"></link>\n    <Form.Control type='text' placeholder='Введіть перші літери назви категорії'></Form.Control>\n    <br/>\n      <Table striped bordered hover>\n  <thead>\n    <tr>\n      <th>Назва</th>\n      <th>Опис</th>\n      <th>Управління</th>\n    </tr>\n  </thead>\n  <tbody>\n  {categories.map((category) => (\n     <tr>\n        <td>{category.name}</td>\n        <td>{category.description}</td>\n         <NavLink\n           to ={`/editcategory/${category.id}`}>\n         <Button type=\"button\" variant=\"outline-secondary\"><i className=\"fas fa-edit\"></i></Button>\n         </NavLink>\n        <Button type=\"button\" variant=\"outline-danger\" onClick={() => onRemove(category.id)}><i className=\"fa fa-trash\"></i></Button>{''}   \n     </tr>\n   ))}\n</tbody>\n</Table>\n     </>\n    );   \n}\nexport default CategoriesList;\n","/mnt/c/Users/petya/dev/node-test/babules/src/api/categories.js",[],["75","76"],"/mnt/c/Users/petya/dev/node-test/babules/src/api/const.js",[],"/mnt/c/Users/petya/dev/node-test/babules/src/pages/AddCategory.js",["77"],"import React, {Fragment} from 'react'\r\nimport {CategoryForm} from '../components/CategoryForm'\r\n\r\nexport function AddCategory () {\r\n    return(\r\n\r\n        <CategoryForm />\r\n        )\r\n    }","/mnt/c/Users/petya/dev/node-test/babules/src/components/CategoryForm.js",["78"],"import React, {useState} from 'react';\r\nimport {Form, Button, Table}  from 'react-bootstrap'; \r\n\r\nexport function CategoryForm ({category}) {\r\n     \r\n     const [name, setName] = useState('')\r\n     const [description, setDescription] = useState('')\r\n     function onSave () {\r\n        console.log(name, description)\r\n        if (name.trim() === '' || description.trim() === '') {\r\n            alert('введіть щось, please')\r\n            return\r\n        }\r\n        \r\n        const prevCategoriesStr = localStorage.getItem('categories')\r\n        const prevCategories = JSON.parse (prevCategoriesStr) ?? []\r\n        //треба перевірити чи в цьому масиві є така сама категорія по назві, якщо є то алерт\r\n        const newCategory = {id:Date.now(),name, description}\r\n        prevCategories.push(newCategory)\r\n        const categoryStr = JSON.stringify(prevCategories) \r\n        localStorage.setItem('categories', categoryStr)\r\n        if (newCategory === {name, description}) {\r\n            alert('Сорі, така категорія вже є')\r\n            return\r\n        }\r\n     }\r\n    return(\r\n    <>\r\n         <div>{name}</div>\r\n         <Form.Control type='text' onChange={(event)=>{setName(event.target.value)}} placeholder='Назва'></Form.Control>\r\n         <Form.Control type='text' onChange={(event)=>{setDescription(event.target.value)}} placeholder='Опис'></Form.Control>\r\n         <Button onClick={()=>onSave()}>Додати категорію</Button>\r\n\r\n     </>\r\n     )\r\n }\r\n ",["79","80"],"/mnt/c/Users/petya/dev/node-test/babules/src/pages/Categories.js",["81","82"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport CategoriesList from '../components/CategoriesList'\r\n\r\nexport const Categories = () => {\r\n  const categoriesStr = localStorage.getItem('categories')\r\n  const categories = JSON.parse(categoriesStr)\r\n  const [categoriesState, setCategories] = useState(categories ?? [])\r\n    \r\n    function onRemove(id) {\r\n      const newCategories = categoriesState.filter((category) => category.id !== id);\r\n      \r\n       setCategories(newCategories)\r\n\r\n       localStorage.setItem('categories', JSON.stringify(newCategories))\r\n   }\r\n\r\n   \r\n  return (\r\n\r\n      <CategoriesList categories={categoriesState} \r\n      onRemove={onRemove}\r\n      />\r\n      \r\n  )\r\n  \r\n}\r\n","/mnt/c/Users/petya/dev/node-test/babules/src/pages/EditCategory.js",["83","84","85"],"import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\n    export function EditCategory() {\r\n    \r\n        const location = useLocation()\r\n        const pathParts = location.pathname.split('/')\r\n        const id = pathParts[pathParts.length-1]\r\n        //const prevCategoriesStr = localStorage.getItem('categories')\r\n        //const prevCategories = JSON.parse (prevCategoriesStr) ?? []\r\n        const prevNameStr = localStorage.getItem('categories')\r\n        const prevDescriptionStr = localStorage.getItem('categories')\r\n        const prevName = JSON.parse(prevNameStr)\r\n        const prevDescription = JSON.parse(prevDescriptionStr)    \r\n        const categories = JSON.parse(localStorage.getItem('categories'));\r\n        const {name, description}  = categories.find(category => 'name')\r\n          \r\n        return (\r\n        <>\r\n        <Form.Control type='text' value={name}/>                            \r\n        <Form.Control type='text' value={description}/>\r\n        <Button>Зберегти</Button> \r\n        </> \r\n\r\n        )\r\n    }\r\n    export default EditCategory",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"97","line":6,"column":12,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":10,"column":21,"nodeType":"100","messageId":"101","endLine":10,"endColumn":22},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"92","severity":1,"message":"104","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"105","line":2,"column":23,"nodeType":"94","messageId":"95","endLine":2,"endColumn":28},{"ruleId":"86","replacedBy":"106"},{"ruleId":"88","replacedBy":"107"},{"ruleId":"92","severity":1,"message":"104","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":1,"column":37,"nodeType":"94","messageId":"95","endLine":1,"endColumn":46},{"ruleId":"92","severity":1,"message":"108","line":9,"column":15,"nodeType":"94","messageId":"95","endLine":9,"endColumn":17},{"ruleId":"92","severity":1,"message":"109","line":14,"column":15,"nodeType":"94","messageId":"95","endLine":14,"endColumn":23},{"ruleId":"92","severity":1,"message":"110","line":15,"column":15,"nodeType":"94","messageId":"95","endLine":15,"endColumn":30},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'onEdit' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["111"],["112"],"'Fragment' is defined but never used.","'Table' is defined but never used.",["111"],["112"],"'id' is assigned a value but never used.","'prevName' is assigned a value but never used.","'prevDescription' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]